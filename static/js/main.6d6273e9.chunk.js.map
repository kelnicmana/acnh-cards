{"version":3,"sources":["Villager.js","Villagers.js","App.js","reportWebVitals.js","index.js"],"names":["Villager","genderIcon","image_uri","name","bday","phrase","icon_uri","personality","hobby","gender","className","src","alt","Villagers","villagers","map","villager","id","App","useState","setVillagers","fetchVillagers","a","fetch","response","json","console","log","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAiCeA,EA9BE,SAAC,GASX,IACDC,EATJC,EAQI,EARJA,UACAC,EAOI,EAPJA,KACmBC,EAMf,EANJ,mBACgBC,EAKZ,EALJ,gBACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,MAKA,OADuBP,EAAZ,WAFP,EADJQ,OAGoC,cAAC,IAAD,IAA8B,cAAC,IAAD,IAEhE,sBAAKC,UAAU,aAAf,UACE,sBAAKA,UAAU,QAAf,UACE,6BAAKP,EAAK,eACV,qBAAKO,UAAU,OAAOC,IAAKL,EAAUM,IAAI,SAE3C,qBAAKF,UAAU,QAAQC,IAAKT,EAAWU,IAAI,MAC3C,sBAAKF,UAAU,cAAf,UACE,4BAAIH,IACJ,4BAAIN,OAEN,2CAAcG,KACd,6CAAgBC,KAChB,wCAAWG,SCPFK,EAlBG,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACnB,OACE,sBAAKJ,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAKC,IAAI,gBAAgBC,IAAI,cAC7B,2DACA,qBAAKD,IAAI,gBAAgBC,IAAI,iBAE/B,uBACA,qBAAKF,UAAU,WAAf,SACGI,EAAUC,KAAI,SAACC,GACd,OAAO,cAAC,EAAD,eAAgCA,GAAjBA,EAASC,aCgB1BC,MAzBf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOL,EAAP,KAAkBM,EAAlB,KAEMC,EAAc,uCAAG,8BAAAC,EAAA,+EAEIC,MAPjB,qCAKa,cAEbC,EAFa,gBAGKA,EAASC,OAHd,OAGbX,EAHa,OAInBM,EAAaN,GACbY,QAAQC,IAAIb,EAAU,KALH,kDAOnBY,QAAQC,IAAR,MAPmB,0DAAH,qDAepB,OAJAC,qBAAU,WACRP,MACC,IAGD,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,CAAWI,UAAWA,OCbbe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6d6273e9.chunk.js","sourcesContent":["import React from \"react\";\nimport { GiFemale, GiMale } from \"react-icons/gi\";\n\nconst Villager = ({\n  image_uri,\n  name,\n  \"birthday-string\": bday,\n  \"catch-phrase\": phrase,\n  icon_uri,\n  personality,\n  hobby,\n  gender,\n}) => {\n  let genderIcon;\n  gender === \"Female\" ? (genderIcon = <GiFemale />) : (genderIcon = <GiMale />);\n  return (\n    <div className=\"singleCard\">\n      <div className=\"names\">\n        <h2>{name[\"name-USen\"]}</h2>\n        <img className=\"icon\" src={icon_uri} alt=\"#\" />\n      </div>\n      <img className=\"image\" src={image_uri} alt=\"#\" />\n      <div className=\"personality\">\n        <p>{personality}</p>\n        <p>{genderIcon}</p>\n      </div>\n      <p>Birthday: {bday}</p>\n      <p>Catchphase: {phrase}</p>\n      <p>Hobby: {hobby}</p>\n    </div>\n  );\n};\n\nexport default Villager;\n","import React from \"react\";\nimport Villager from \"./Villager\";\n\nconst Villagers = ({ villagers }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"headTitle\">\n        <img src=\"./favicon.ico\" alt=\"leaf icon\" />\n        <h1>Animal Crossing Villagers</h1>\n        <img src=\"./favicon.ico\" alt=\"leaf icon\" />\n      </div>\n      <hr />\n      <div className=\"allCards\">\n        {villagers.map((villager) => {\n          return <Villager key={villager.id} {...villager} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Villagers;\n","import React, { useState, useEffect } from \"react\";\nimport Villagers from \"./Villagers\";\n\nconst url = \"https://acnhapi.com/v1a/villagers\";\n\nfunction App() {\n  const [villagers, setVillagers] = useState([]);\n\n  const fetchVillagers = async () => {\n    try {\n      const response = await fetch(url);\n      const villagers = await response.json();\n      setVillagers(villagers);\n      console.log(villagers[59]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchVillagers();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Villagers villagers={villagers} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}